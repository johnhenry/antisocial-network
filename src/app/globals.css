@tailwind base;
@tailwind components;
@tailwind utilities;
*,
::before,
::after {
  color-scheme: light dark;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  color: inherit;
  background-color: inherit;
  border-color: currentColor;
  font: inherit;
  scroll-behavior: inherit;
  --color: inherit;
  --background-color: inherit;
  --color-inverse: inherit;
  --background-color-inverse: inherit;
}

/* custom properties: font */

:root {
  --font-family: "Arial", sans-serif;
}

/* custom properties: color */
:root {
  --color-brown: rgb(165, 42, 42);
  --color-brown-dark: hsl(var(--color-brown) h s calc(l * 0.9));
  --color-cream: rgb(249, 251, 231);
  --color-cream-dark: hsl(var(--color-cream) h s calc(l * 0.9));

  --color-foreground: var(--color-brown);
  --color-foreground-inverse: var(--color-cream);
  --color-foreground-secondary: var(--color-brown-dark);
  --color-foreground-secondary-inverse: var(--color-cream-dark);

  --color-background: var(--color-cream);
  --color-background-inverse: var(--color-brown);
  --color-background-secondary: var(--color-cream-dark);
  --color-background-secondary-inverse: var(--color-brown-dark);

  --color: light-dark(var(--color-foreground), var(--color-foreground-inverse));
  --background-color: light-dark(
    var(--color-background),
    var(--color-background-inverse)
  );

  --color-inverse: light-dark(
    var(--color-foreground-inverse),
    var(--color-foreground)
  );
  --background-color-inverse: light-dark(
    var(--color-background-inverse),
    var(--color-background)
  );
}

/* custom properties: size */
:root {
  --size-font: 16px;

  --size-padding: 1rem;
  --size-padding-inner: calc(var(--size-padding) / 2);
  --size-padding-inside: calc(var(--size-padding) / 4);

  --size-gap: 16px;
  --size-gap-inner: calc(var(--size-gap) / 2);
  --size-gap-inside: calc(var(--size-gap) / 4);

  --size-corner: 16px;
  --size-corner-inner: calc(var(--size-corner) / 2);
  --size-corner-inside: calc(var(--size-corner) / 4);

  --size-header: 48px;

  --size-width-applicaion: 100%;

  --space-side-header: var(--size-padding);

  @media (orientation: landscape) {
    --size-width-applicaion: 768px;
    --space-side-header: 0;
  }
}

/* custom properties: orientation */

:root {
  --orientation-flex: column;
  --hide-landscape: unset;
  --hide-portrait: none;
  --boolean-landscape: 0;
  --boolean-portrait: 1;
  @media (orientation: landscape) {
    --orientation-flex: row;
    --hide-landscape: none;
    --hide-portrait: unset;
    --boolean-landscape: 1;
    --boolean-portrait: 0;
  }
}

/* custom properties assingment */
:root {
  font-size: var(--size-font);
  font-family: var(--font-family);
  color: var(--color);
  background-color: var(--background-color);
  scroll-behavior: smooth;
}

/* components */

html,
body {
  display: contents;
  width: 100vw;
  height: 100vh;
  background-color: var(--color-background-secondary);
}

button,
.button {
  padding: var(--size-padding-inside);
  &:hover {
    filter: brightness(0.9);
  }
}

a,
.a {
  text-decoration: none;
  &:hover {
  }
  p > & {
    text-decoration: underline;
  }
}

label {
  &.label-file {
    > input[type="file"] {
      display: none;
    }
  }
  &.label-checkbox {
    > input[type="checkbox"] {
      display: none;
    }
    &:has(:checked) {
    }
  }
  &.label-radio {
    > input[type="radio"] {
      display: none;
    }
    &:has(:checked) {
    }
  }
}

button,
.button,
label.label-file,
label.label-checkbox,
label.label-radio {
  display: inline-block;
  padding: var(--size-padding-inner);
  background-color: var(--color-background);
  color: var(--color-foreground);
  border-radius: var(--size-corner-inner);
  cursor: pointer;
  &:hover {
    filter: brightness(0.9);
  }
}
svg {
  display: inline;
}
article {
  /* self control */
  padding-top: var(--size-padding);
  padding-right: calc(var(--size-header) + var(--space-side-header));
  min-height: 100vh;
  width: 100vw;
  align-content: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--size-gap);
  width: var(--size-width-applicaion);
  margin-left: auto;
  margin-right: auto;

  @media (orientation: landscape) {
    padding-right: inherit;
    padding-top: calc(var(--size-header) + var(--size-padding));
  }
}

h1 {
  font-size: 1.75rem;
}
h2 {
  font-size: 1.5rem;
}

body > main {
  padding: 0;
  height: 100%;
  > header {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    height: 100%;
    display: flex;
    width: var(--size-header);
    flex-direction: var(--orientation-flex);
    align-items: center;
    padding: var(--size-padding);
    gap: var(--size-padding);
    > h1 {
      display: contents;
      > a {
        display: flex;
        gap: var(--size-gap);
        justify-content: center;
        align-items: center;
        [alt="logo"] {
          display: inline;
          -webkit-mask-size: 100%;
          mask-size: 100%;
          -webkit-mask-repeat: no-repeat;
          mask-repeat: no-repeat;
          -webkit-mask-position: center;
          mask-position: center;
          width: 2rem;
          aspect-ratio: 1;
          -webkit-mask-image: url(/logo.svg);
          mask-image: url(/logo.svg);
          background-color: currentColor;
        }
      }
    }
    > nav {
      display: flex;
      flex-direction: var(--orientation-flex);
      gap: var(--size-padding);
      width: 100%;

      a {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: var(--size-gap);
        .menu-icon {
          font-size: 1.5rem;
        }
      }
      @media (orientation: landscape) {
        width: fit-content;
        width: -moz-fit-content;
      }
    }
    &:hover,
    &:focus-within {
      width: auto;
      align-items: start;
      .collapse-text-portrait {
        display: inline;
      }
    }
    @media (orientation: landscape) {
      top: 0;
      right: 0;
      left: 0;
      height: var(--size-header);
      width: 100%;
      > nav {
        margin-inline-start: auto;
      }
      &:hover,
      &:focus-within {
        align-items: center;
      }
    }
  }
}

.input-box {
  width: 100%;
  padding-left: var(--size-padding);
  padding-right: var(--size-padding);
  display: grid;
  grid-template-columns: 15fr 48px;
  grid-template-rows: 1fr 2rem;
  grid-template-areas:
    "ta fi"
    "bu bu";
  position: relative;

  > textarea {
    width: 100%;
    grid-area: ta;
    resize: vertical;
    border: none;
    border-width: 1px;
    border-style: solid;
    border-start-start-radius: var(--size-gap);
    border-end-start-radius: var(--size-gap);
    border-right: none;
    padding: var(--size-padding);
    outline: none;
  }
  > fieldset {
    grid-area: fi;
    border-width: 1px;
    border-style: solid;
    padding: var(--size-padding);
    border-end-end-radius: var(--size-gap);
    border-left: none;
    border-start-end-radius: var(--size-gap);
    display: flex;
    flex-direction: column;
    gap: var(--size-gap);
  }
  > button {
    grid-area: bu;
    width: 67%;
    margin: 0 auto;
    border-start-end-radius: 0;
    border-start-start-radius: 0;
    > svg {
      transform: scale(0.9);
      margin-top: -3px;
    }
  }
  &:has(textarea.slash-command) {
    .label-file {
      color: black;
      background-color: green;
    }
    > textarea,
    > fieldset,
    > button {
      background-color: black;
      color: green;
    }
  }
  .popup {
    position: absolute;
    z-index: 1;
    color: var(--color-background);
    background-color: var(--color-background-inverse);
    border-radius: var(--size-corner-inside);
    box-shadow: inset 0 0 0 1px var(--color-background);
    max-height: 128px;
    overflow-y: auto;
    .loading {
      @apply px-4 py-2;
    }

    .option {
      @apply px-4 py-2 cursor-pointer flex items-center;
      position: "absolute";
      background-color: var(--color-text);
      color: var(--color-midground);
      .avatar {
        @apply w-8 h-8 rounded-full flex items-center justify-center mr-2;
      }
      .symbol {
        @apply mr-2 text-xl;
      }
      &.selected {
        background-color: var(--color-background);
        color: var(--color-background-inverse);
      }
    }
  }
}
.settings-box {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  > label {
    width: 100%;
    border: 1px solid var(--color-text);
    display: flex;
    justify-content: space-between;
    > span {
      border: 1px dotted var(--color-midground);
      display: inline-block;
      padding: var(--size-gap-inner);
      background-color: var(--color-text);
      color: var(--color-midground);
      width: 33%;
      margin-right: auto;
      &:hover {
        filter: brightness(0.9);
      }
    }
    > :not(span) {
      height: 100%;
      padding: 0;
      width: 67%;
      padding: 0.5rem;
    }
  }
}

.infinite-scroller-window {
  flex-direction: column;
  overflow: auto;
  display: block;
  display: flex;
  height: 100vh; /* functional: cannot be a percentage */
  flex-direction: column;
  > * {
    overflow-y: auto;
    min-height: 125%;
    display: flex;
    flex-direction: column;
    > *:last-child {
      margin-top: auto;
    }
    > *:first-child:only-child {
      margin-bottom: auto;
    }
  }
}

.infinite-scroller-window > ul:has(> :where(.log)) {
  > * {
    &:last-child {
      min-height: 2px;
      &:not([disabled])::before {
        content: "loading...";
      }
    }
  }
}
.infinite-scroller-window:has(> ul) {
  width: 100%;
}

ul:has(> .entity) {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 1rem;
}

.list-tight {
  gap: 0;
}

.log {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 1rem;
  width: 100%;
  &:has(> .created) {
    color: green;
  }
  > header {
    display: flex;
    gap: 1rem;
    > .type {
      text-transform: uppercase;
    }
    > .timestamp {
      margin-right: auto;
    }
  }
  > main {
    margin-left: auto;
  }
}

article.logs {
  .infinite-scroller-window {
    background-color: black;
  }
}

.entity {
  width: 100%;
  display: flex;
  flex-direction: column;
  position: relative;
  box-shadow: color(srgb 0 0 0 / 0.3) 0px 1px 2px 0px,
    color(srgb 0 0 0 / 0.15) 0px 2px 6px 2px;
  > header {
    display: grid;
    grid-template-columns: 32px 1fr 1fr 1fr 1fr;
    grid-template-rows: 32px 1fr;
    grid-template-areas:
      "im na ti ti li"
      ".. co co co co";
    padding: var(--size-padding);
    gap: var(--size-gap);
    > .agent-link {
      display: contents;
    }
    .img {
      grid-area: im;
      width: 32px;
      height: 32px;
      border-radius: 50%;
      margin: auto;
    }
    .name {
      grid-area: na;
    }
    .timestamp {
      grid-area: ti;
    }
    .content {
      grid-area: co;
      white-space: normal;
      &::before {
        content: "“";
      }
      &::after {
        content: "”";
      }
    }
    .entity-link {
      grid-area: li;
      text-align: right;
    }

    &:not(:has(> .agent-link)) {
      grid-template-columns: 32px 1fr 1fr 1fr;
      grid-template-areas:
        "ti ti .. li"
        "co co co co";
    }
    &:has(> .name) {
      grid-template-columns: 32px 1fr 1fr 1fr;
      grid-template-areas:
        "na na ti ti li"
        "co co co co co";
    }
  }

  .attachments {
    display: block;

    > * {
      width: 50%;
      margin-left: auto;
      margin-right: auto;

      > * {
        width: 100%;
        object-fit: cover;
      }
      > iframe {
        pointer-events: none;
      }
    }
    &:has(> :nth-child(2)) {
      > * {
        display: inline-block;
        width: 50%;
      }
    }
    &:has(> :nth-child(3)) {
      white-space: nowrap;
      overflow-x: scroll;
      overflow-y: hidden;
      -webkit-overflow-scrolling: touch;
      > * {
        width: 50%;
      }
    }
  }
  &:has(.attachments > :nth-child(3)) {
    &::after {
      position: absolute;
      background-color: transparent;
      padding: var(--size-padding-inside);
      opacity: 75%;
      content: "↔";
      bottom: 0;
      right: 0;
    }
  }

  .list-tight > & {
    > header {
      .content {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        &::before {
          content: none;
        }
        &::after {
          content: none;
        }
      }
    }
    .attachments {
      display: none;
    }
  }
  > footer {
    display: flex;
    width: 100%;
    justify-content: center;
    padding: var(--size-padding-inner);
    border-top: 1px solid currentColor;
    button {
      /*.inverted colors*/
      color: var(--color-background);
      background-color: var(--color-background-inverse);
    }
    button.bookmarked,
    button.rememberance {
      background-color: var(--color-background);
      color: var(--color-background-inverse);
    }
  }
}

.agent-masquerade {
  border-style: solid;
  border-width: 1px;
  width: 80%;
  border-radius: 1.5rem;
  height: 2rem;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  overflow: hidden;
  padding: 0.25rem;
  /* padding-left: 1rem; */
  p {
    flex: 1;
    text-align: center;
  }
  button {
    /* margin-left: auto; */
    padding: 0;
    font-size: 0.6rem;
    border-radius: 50%;
    aspect-ratio: 1/1;
    &:first-child {
      font-size: 0.6rem;
    }
  }
}

.inverted-colors {
  color: var(--color-inverse);
  background-color: var(--background-color-inverse);
}
.menu-icon {
  display: var(--hide-landscape, flex);
}
.collapse-text-portrait {
  display: var(--hide-portrait, inline);
}

.attached-file {
  position: relative;
  font-size: 0.75rem;
  > button {
    --size: 1rem;
    padding: 0;
    width: var(--size);
    aspect-ratio: 1;
    border-radius: 50%;
    display: none;
    position: absolute;
    top: calc(-1 * var(--size) / 2);
    right: calc(-1 * var(--size) / 2);
    :hover > & {
      display: block;
    }
  }
  image {
    width: 32px;
    aspect-ratio: 1;
  }
  &:hover {
  }
}

.file-single {
  > h2 {
    input {
      width: 100%;
    }
  }
  > main {
    display: flex;
    flex-direction: var(--orientation-flex);
    gap: var(--size-gap);

    > * {
      border-radius: var(--size-radius);
      overflow: hidden;
      background-color: var(--color-midground);
      padding: var(--size-gap-inner);
    }
    > header {
      flex: 1;
      input {
        padding: 0 var(--size-gap-inner);
      }
    }
    > footer {
      flex: 1;
      font-size: 0.75rem;
      img,
      iframe {
        width: 100%;
      }
    }
  }
  iframe {
    /*https://stackoverflow.com/questions/819416/adjust-width-and-height-of-iframe-to-fit-with-content-in-it*/
    width: 100%;
    height: 100%;
    aspect-ratio: 1/1;
    border: none;
    /* overflow: hidden; */
  }
}

.agent-single {
  > h2 {
    overflow: hidden;
    display: inline;
    display: flex;
    align-items: center;
    input {
      display: inline;
      padding: var(--size-gap);
    }
    &::before {
      content: "@";
      display: inline;
    }
  }
  > main {
    display: flex;
    flex-direction: var(--column-direction);
    gap: var(--size-gap);
    label {
      button {
        /*.inverted colors*/
        color: var(--color-background);
        background-color: var(--color-background-inverse);
      }
      button.masquerade {
        background-color: var(--color-background);
        color: var(--color-background-inverse);
      }
    }
    > * {
      border-radius: var(--size-radius);
      overflow: hidden;
      background-color: var(--color-midground);
      padding: var(--size-gap-inner);
    }
    > header {
      flex: 1;
      > input {
        padding: 0 var(--size-gap-inner);
      }
      > img {
        width: 100%;
      }
      > form {
        display: flex;
        flex-direction: column;
        gap: var(--size-gap-inner);
        > details {
          display: flex;
          flex-direction: column;
          gap: var(--size-gap-inner);
        }
      }
    }
    label {
      display: flex;
      flex-direction: row;
      gap: var(--size-gap-inner);
      padding: var(--size-gap-inner);
    }
    > aside {
      flex: 1;
      > .agent-qualities {
        display: flex;
        flex-direction: column;
        gap: var(--size-gap-inner);
        .quality {
          position: relative;
          input,
          textarea {
            border: 1px solid var(--color-text);
            padding: var(--size-gap-inner);
            width: 100%;
          }
          > button.close {
            --size: 1.5rem;
            width: var(--size);
            aspect-ratio: 1;
            border-radius: 50%;
            border-top-right-radius: 0;
            border-top-left-radius: 0;
            border-bottom-right-radius: 0;
            padding-top: 0;
            padding-right: 0;
            padding: 0;
            display: none;
            position: absolute;
            font-size: 0.75rem;
            top: 0;
            right: 0;
            :hover > & {
              display: block;
            }
          }
        }
      }
    }
  }
  textarea {
    border: 1px solid var(--color-text);
    width: 100%;
    padding: var(--size-gap-inner);
  }
}
.search-options {
  width: 100%;
  text-align: center;
  padding: var(--size-padding);
  display: flex;
  justify-content: flex-start;
  align-items: center;
  button {
    padding: var(--size-gap-inner);
    user-select: none;
    background-color: var(--color-text);
    color: var(--color-background);
    border-radius: 0;
    padding: var(--size-gap);

    &:last-of-type {
      border-start-end-radius: var(--size-corner);
      border-end-end-radius: var(--size-corner);
    }

    &:hover {
      filter: brightness(0.9);
    }
    &:hover,
    &.active {
      color: var(--color-inverse);
      background-color: var(--background-color-inverse);
    }
  }
  input {
    width: 50%;
    margin-left: auto;
  }
  > footer {
    padding: var(--size-padding);
    display: flex;
  }
}

dd > dl,
ol > ol,
dd > ol,
ol > dl {
  padding-left: 1rem;
}

ul {
  width: 100%;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.spinner {
  display: inline-block;
  animation: spin 2s linear infinite;
  &::before {
    content: "↻";
  }
}

.toast-notification {
  position: fixed;
  bottom: 20px;
  left: 20px;
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  z-index: 1000;
  background-color: transparent;
  .toast-item {
    background-color: white;
    color: red;
    padding: 12px 20px;
    border-radius: 4px;
    margin-bottom: 10px;
    max-width: 300px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    animation: fadeOutToastNotification 0.5s ease-out forwards;
    animation-delay: calc(var(--duration, 3000ms) - 500ms);
  }

  .toast-item:hover {
    animation-play-state: paused;
  }

  .toast-item > a {
    text-decoration: none;
    margin-right: 10px;
  }

  .toast-item > a:hover {
    text-decoration: underline;
  }

  .toast-item > button {
    background: none;
    border: none;
    cursor: pointer;
    font-size: 16px;
    margin-left: 10px;
    visibility: hidden;

    &::before {
      visibility: visible;
      content: "×";
    }
  }

  .toast-item > button:hover {
    color: white;
  }
}

@keyframes fadeOutToastNotification {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: translateY(-20px);
  }
}
